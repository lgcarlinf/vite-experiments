/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NotasIndexImport } from './routes/notas/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const NotasNuevaLazyImport = createFileRoute('/notas/nueva')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const NotasIndexRoute = NotasIndexImport.update({
  path: '/notas/',
  getParentRoute: () => rootRoute,
} as any)

const NotasNuevaLazyRoute = NotasNuevaLazyImport.update({
  path: '/notas/nueva',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notas/nueva.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/notas/nueva': {
      id: '/notas/nueva'
      path: '/notas/nueva'
      fullPath: '/notas/nueva'
      preLoaderRoute: typeof NotasNuevaLazyImport
      parentRoute: typeof rootRoute
    }
    '/notas/': {
      id: '/notas/'
      path: '/notas'
      fullPath: '/notas'
      preLoaderRoute: typeof NotasIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/notas/nueva': typeof NotasNuevaLazyRoute
  '/notas': typeof NotasIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/notas/nueva': typeof NotasNuevaLazyRoute
  '/notas': typeof NotasIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/notas/nueva': typeof NotasNuevaLazyRoute
  '/notas/': typeof NotasIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/notas/nueva' | '/notas'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/notas/nueva' | '/notas'
  id: '__root__' | '/' | '/notas/nueva' | '/notas/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  NotasNuevaLazyRoute: typeof NotasNuevaLazyRoute
  NotasIndexRoute: typeof NotasIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  NotasNuevaLazyRoute: NotasNuevaLazyRoute,
  NotasIndexRoute: NotasIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/notas/nueva",
        "/notas/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/notas/nueva": {
      "filePath": "notas/nueva.lazy.tsx"
    },
    "/notas/": {
      "filePath": "notas/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
